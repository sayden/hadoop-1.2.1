[2014-06-06 12:55:10,701] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@61556234, name=log4j:logger=kafka.controller (kafka.controller)
[2014-06-06 12:59:25,575] INFO [Controller 0]: Controller starting up (kafka.controller.KafkaController)
[2014-06-06 12:59:25,596] INFO [Controller 0]: Broker 0 starting become controller state transition (kafka.controller.KafkaController)
[2014-06-06 12:59:25,602] INFO [Controller 0]: Controller 0 incremented epoch to 1 (kafka.controller.KafkaController)
[2014-06-06 12:59:25,616] INFO [Controller 0]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2014-06-06 12:59:25,617] INFO [Controller 0]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2014-06-06 12:59:25,617] INFO [Controller 0]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2014-06-06 12:59:25,620] INFO [Controller 0]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2014-06-06 12:59:25,621] INFO [Controller 0]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2014-06-06 12:59:25,622] INFO [Controller 0]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2014-06-06 12:59:25,625] INFO [Controller 0]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2014-06-06 12:59:25,625] INFO [Controller 0]: List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2014-06-06 12:59:25,628] INFO [Controller 0]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2014-06-06 12:59:25,629] INFO [Controller 0]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2014-06-06 12:59:25,629] INFO [Controller 0]: Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2014-06-06 12:59:25,631] INFO [Replica state machine on controller 0]: Started replica state machine with initial state -> Map() (kafka.controller.ReplicaStateMachine)
[2014-06-06 12:59:25,635] INFO [Partition state machine on Controller 0]: Started partition state machine with initial state -> Map() (kafka.controller.PartitionStateMachine)
[2014-06-06 12:59:25,637] INFO [Controller 0]: Broker 0 is ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2014-06-06 12:59:25,637] INFO [Controller 0]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2014-06-06 12:59:25,638] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2014-06-06 12:59:25,643] INFO [Controller 0]: Controller startup complete (kafka.controller.KafkaController)
[2014-06-06 12:59:25,720] DEBUG [ControllerEpochListener on 0]: Controller epoch listener fired with new epoch 1 (kafka.controller.ControllerEpochListener)
[2014-06-06 12:59:25,724] INFO [ControllerEpochListener on 0]: Initialized controller epoch to 1 and zk version 0 (kafka.controller.ControllerEpochListener)
[2014-06-06 12:59:25,725] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2014-06-06 12:59:25,792] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: 0, deleted brokers: , all live brokers: 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2014-06-06 12:59:25,793] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2014-06-06 12:59:25,810] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to id:0,host:localhost.localdomain,port:9092 for sending state change requests (kafka.controller.RequestSendThread)
[2014-06-06 12:59:25,812] INFO [Controller-0-to-broker-0-send-thread], Starting  (kafka.controller.RequestSendThread)
[2014-06-06 12:59:25,812] INFO [Controller 0]: New broker startup callback for 0 (kafka.controller.KafkaController)
